// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "quanaimadi@.gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "Возвращает список всех категорий жалоб.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "delete": {
                "description": "Удаляет категорию жалоб по переданному идентификатору.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID категории",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос (не указан ID)",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Категория не найдена",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/category": {
            "post": {
                "description": "Создает новую категорию жалоб.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "description": "Данные категории",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/categoriesCreate.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или декодирования",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/complaint": {
            "get": {
                "description": "Retrieve all complaints from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complaints"
                ],
                "summary": "Get all complaints",
                "responses": {
                    "200": {
                        "description": "List of complaints",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Complaint"
                            }
                        }
                    },
                    "404": {
                        "description": "No complaints found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new complaint for a specific user and category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complaints"
                ],
                "summary": "Create a new complaint",
                "parameters": [
                    {
                        "description": "Complaint details",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response with complaint ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "429": {
                        "description": "Limit of one complaint per hour exceeded",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/complaint/{id}": {
            "get": {
                "description": "Retrieve a complaint using its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complaints"
                ],
                "summary": "Get a complaint by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complaint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Complaint details",
                        "schema": {
                            "$ref": "#/definitions/domain.Complaint"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Complaint not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a complaint by its ID",
                "tags": [
                    "Complaints"
                ],
                "summary": "Delete a complaint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complaint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Complaint successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Complaint not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/complaints/category/{id}": {
            "get": {
                "description": "Retrieve all complaints that belong to a specific category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complaints"
                ],
                "summary": "Get complaints by category ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of complaints",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Complaint"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/complaints/{id}/resolve_complaint": {
            "put": {
                "description": "Update the status of a complaint (approve or reject) with an answer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Complaints"
                ],
                "summary": "Resolve a complaint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Complaint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Complaint resolution details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/resolveComplaint.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Complaint status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "404": {
                        "description": "Complaint not found",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "categoriesCreate.Request": {
            "type": "object",
            "required": [
                "answer",
                "description",
                "id",
                "title"
            ],
            "properties": {
                "answer": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "create.Request": {
            "type": "object",
            "required": [
                "categoryId",
                "message"
            ],
            "properties": {
                "categoryId": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "user_uuid": {
                    "type": "string"
                }
            }
        },
        "domain.Category": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "description": {
                    "description": "Detailed description of the category",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domain.Complaint": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "description": "active, resolved, or rejected",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_uuid": {
                    "type": "string"
                }
            }
        },
        "resolveComplaint.Request": {
            "type": "object",
            "required": [
                "answer",
                "status"
            ],
            "properties": {
                "answer": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "description": "Error, Ok",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/complaint",
	Schemes:          []string{},
	Title:            "Complaint Server API",
	Description:      "This is a server for managing complaints and categories.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
